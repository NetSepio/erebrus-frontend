name: "Build and Push to GHCR"

on:
  push:
    branches:
      - main

jobs:
  build_push:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker Image For Prod
        env:
          DEV_ENV_FILE: ${{ secrets.DEV_ENV_FILE }}
        run: |
          echo "$DEV_ENV_FILE" > .env
          export CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
          export TAG=$([[ $CURRENT_BRANCH == $(basename ${{ github.ref }}) ]] && echo $CURRENT_BRANCH || echo "latest")
          echo $TAG
          export GITHUB_REF_IMAGE=ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA
          export GITHUB_BRANCH_IMAGE=ghcr.io/$GITHUB_REPOSITORY:$TAG
          export GITHUB_REF_IMAGE=$(echo $GITHUB_REF_IMAGE | tr '[:upper:]' '[:lower:]')
          export GITHUB_BRANCH_IMAGE=$(echo $GITHUB_BRANCH_IMAGE | tr '[:upper:]' '[:lower:]')
          docker build --build-arg version=$GITHUB_SHA -t $GITHUB_REF_IMAGE -t $GITHUB_BRANCH_IMAGE .
          echo "Pushing Image to GitHub Container Registry"
          docker push $GITHUB_REF_IMAGE
          docker push $GITHUB_BRANCH_IMAGE
          rm -rf .env

  # deploy_prod:
  #   needs: build_push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy on PROD server
  #       if: github.ref == 'refs/heads/master'
  #       uses: appleboy/ssh-action@v0.1.7
  #       with:
  #         host: ${{ secrets.PROD_REMOTE_SERVER_ADDRESS }}
  #         username: ${{ secrets.PROD_SERVER_USERNAME }}
  #         key: ${{ secrets.PROD_REMOTE_SERVER_KEY }}
  #         port: ${{ secrets.PROD_SSH_PORT }}
  #         script: |
  #           pwd
  #           docker stop erebrus-frontend && docker rm erebrus-frontend
  #           docker rmi evadshell/erebrus-frontend:latest
  #           # echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
  #           docker pull evadshell/erebrus-frontend:latest
  #           docker run --name="erebrus-frontend" --restart=always -p 4040:3000 --net=bridge -d evadshell/erebrus-frontend:latest